{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEW;;;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2EAAiB;KAC7B;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;ACXkC;;;;;AAOnD,MAAM,YAAY;IAUvB,YAAoB,MAAc,EACxB,SAA4B,EAC5B,IAAgB;QAFN,WAAM,GAAN,MAAM,CAAQ;QACxB,cAAS,GAAT,SAAS,CAAmB;QAC5B,SAAI,GAAJ,IAAI,CAAY;QAX1B,UAAK,GAAG,cAAc,CAAC;QACvB,SAAI,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC;QACvC,SAAI,GAAG,EAAE,CAAC;QACV,WAAM,GAAG,8DAA8D,CAAC;QACxE,cAAS,GAAG,WAAW,CAAC;QAExB,kBAAa,GAA+C,EAAE,CAAC;IAQ/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,4EAAqB,uBAAuB,CAAC;aAC3D,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,EAAE;YACzC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;gBACZ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC5C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;aAC9C;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBACtB,EAAE,EAAE,IAAI,CAAC,QAAQ;oBACjB,GAAG,EAAE,IAAI,CAAC,QAAQ;oBAClB,GAAG,EAAE,IAAI,CAAC,SAAS;iBACpB,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;;wEAvCU,YAAY;0GAAZ,YAAY;QCVzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;ACC2B;AACK;AAEP;AACT;AACgC;AAChC;AACL;AACwB;;;;AAClE,MAAM,MAAM,GAAmB,EAAE,GAAG,EAAE,qCAAqC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;AAoBpF,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAXJ;YACP,oEAAa;YACb,iEAAgB;YAChB,yDAAY;YACZ,4DAAqB,CAAC;gBACpB,MAAM,EAAE,yCAAyC;aAClD,CAAC;YACF,kEAAgB;YAChB,uEAAqB;YACrB,iEAAsB,CAAC,MAAM,CAAC;SAC/B;mIAIU,SAAS,mBAjBlB,wDAAY;QACZ,2EAAiB,aAGjB,oEAAa;QACb,iEAAgB;QAChB,yDAAY,wDAIZ,kEAAgB;QAChB,uEAAqB;;;;;;;;;;;;;;;;;;;;;ACrBoC;;;;;;;ICFzD,wEAA8C;IAC1C,2EAAuG;IAC3G,qEAAe;;;IADC,0DAAkB;IAAlB,8EAAkB;;ADQ/B,MAAM,iBAAiB;IAU5B,YAAoB,MAAc,EACxB,SAA4B,EAC5B,IAAgB;QAFN,WAAM,GAAN,MAAM,CAAQ;QACxB,cAAS,GAAT,SAAS,CAAmB;QAC5B,SAAI,GAAJ,IAAI,CAAY;QAX1B,UAAK,GAAG,cAAc,CAAC;QACvB,SAAI,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC;QACvC,SAAI,GAAG,EAAE,CAAC;QACV,WAAM,GAAG,8DAA8D,CAAC;QACxE,cAAS,GAAG,WAAW,CAAC;QAExB,kBAAa,GAA+C,EAAE,CAAC;IAQ/D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,4EAAqB,uBAAuB,CAAC;aAC3D,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,EAAE;YACzC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;gBACZ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC5C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;aAC9C;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBACtB,EAAE,EAAE,IAAI,CAAC,QAAQ;oBACjB,GAAG,EAAE,IAAI,CAAC,QAAQ;oBAClB,GAAG,EAAE,IAAI,CAAC,SAAS;iBACpB,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;;kFAvCU,iBAAiB;+GAAjB,iBAAiB;QCV9B,6EAAoE;QAChE,+HAEe;QACf,+EAA4D;QAEhE,4DAAU;;QAND,kFAAqB;QACE,0DAAgB;QAAhB,sFAAgB;QAG5B,0DAAyB;QAAzB,sFAAyB;QAC1B,0DAAc;QAAd,2EAAc;;;;;;;;;;;;;;;;ACLjC,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,qCAAqC;CACjD,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;AChBvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/location/location.component.ts","./src/app/location/location.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { LocationComponent } from './location/location.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'location',\r\n    component: LocationComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'test-project';\r\n  data = { lat: 10.3157, lng: 123.8854 };\r\n  zoom = 14;\r\n  kmlUrl = 'https://files-server.tk/0:/Server%20Downloads/mandauekml.kml';\r\n  mapTypeId = 'satellite';\r\n\r\n  activeDevices: { id: string, lat: number, lng: number }[] = [];\r\ngeoJsonObject: any;\r\n\r\n  constructor(private socket: Socket,\r\n    private changeRef: ChangeDetectorRef,\r\n    private http: HttpClient,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get(`${environment.socketUrl}/api/connected-device`)\r\n      .subscribe((res: any) => {\r\n        this.activeDevices = res;\r\n        this.changeRef.detectChanges();\r\n      });\r\n\r\n    this.socket.on('coordinates/room', (res) => {\r\n      const data = JSON.parse(res);\r\n      const idx = this.activeDevices.findIndex(d => d.id === data.deviceId);\r\n      if (idx > -1) {\r\n        this.activeDevices[idx].lat = data.latitude;\r\n        this.activeDevices[idx].lng = data.longitude;\r\n      } else {\r\n        this.activeDevices.push({\r\n          id: data.deviceId,\r\n          lat: data.latitude,\r\n          lng: data.longitude\r\n        });\r\n      }\r\n      this.changeRef.detectChanges();\r\n    });\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { SocketIoConfig, SocketIoModule } from 'ngx-socket-io';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientJsonpModule, HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgmCoreModule } from '@agm/core';\nimport { LocationComponent } from './location/location.component';\r\nconst config: SocketIoConfig = { url: 'https://dracrawla-rtc.herokuapp.com', options: {} };\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LocationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAephg6kRVLxxou5LlEyUynlYRtLjnsdjk'\r\n    }),\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,\r\n    SocketIoModule.forRoot(config), \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.scss']\n})\nexport class LocationComponent implements OnInit {\n  title = 'test-project';\n  data = { lat: 10.3157, lng: 123.8854 };\n  zoom = 14;\n  kmlUrl = 'https://files-server.tk/0:/Server%20Downloads/mandauekml.kml';\n  mapTypeId = 'satellite';\n\n  activeDevices: { id: string, lat: number, lng: number }[] = [];\ngeoJsonObject: any;\n\n  constructor(private socket: Socket,\n    private changeRef: ChangeDetectorRef,\n    private http: HttpClient,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.http.get(`${environment.socketUrl}/api/connected-device`)\n      .subscribe((res: any) => {\n        this.activeDevices = res;\n        this.changeRef.detectChanges();\n      });\n\n    this.socket.on('coordinates/room', (res) => {\n      const data = JSON.parse(res);\n      const idx = this.activeDevices.findIndex(d => d.id === data.deviceId);\n      if (idx > -1) {\n        this.activeDevices[idx].lat = data.latitude;\n        this.activeDevices[idx].lng = data.longitude;\n      } else {\n        this.activeDevices.push({\n          id: data.deviceId,\n          lat: data.latitude,\n          lng: data.longitude\n        });\n      }\n      this.changeRef.detectChanges();\n    });\n  }\n}\n","<agm-map [latitude]=\"data.lat\" [longitude]=\"data.lng\" [zoom]=\"zoom\">\n    <ng-container *ngFor=\"let x of activeDevices\">\n        <agm-marker [latitude]=\"x.lat\" [longitude]=\"x.lng\" [iconUrl]=\"'/assets/images/robot.png'\"></agm-marker>\n    </ng-container>\n    <agm-data-layer [geoJson]=\"geoJsonObject\"> </agm-data-layer>\n    <agm-kml-layer [url]=\"kmlUrl\"></agm-kml-layer>\n</agm-map>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  socketUrl: 'https://dracrawla-rtc.herokuapp.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}